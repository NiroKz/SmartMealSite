// controllers/accessController.js

const accessModel = require("../models/accessModel");

/**
 * üîπ Retorna todos os usu√°rios e suas permiss√µes de acesso
 */
exports.getAllAccess = async (req, res) => {
  try {
    const data = await accessModel.getAllAccessWithUsers();

    if (!data || data.length === 0) {
      return res.status(404).send("Nenhuma permiss√£o encontrada.");
    }

    console.log("Permiss√µes carregadas com sucesso");
    return res.status(200).json(data);
  } catch (err) {
    console.error("Erro ao buscar permiss√µes:", err);
    return res.status(500).send("Erro interno ao buscar permiss√µes de acesso.");
  }
};

/**
 * üîπ Atualiza as permiss√µes de um usu√°rio espec√≠fico
 */
exports.updateAccess = async (req, res) => {
  try {
    const { id_user } = req.params;
    const permissions = req.body;

    // üî∏ Valida√ß√£o do ID do usu√°rio
    if (!id_user || isNaN(id_user)) {
      return res.status(400).send("ID de usu√°rio inv√°lido.");
    }

    // üî∏ Valida√ß√£o das permiss√µes
    if (!permissions || typeof permissions !== "object") {
      return res.status(400).send("Permiss√µes inv√°lidas ou ausentes.");
    }

    // üî∏ Atualiza as permiss√µes no banco
    const result = await accessModel.updateUserAccess(id_user, permissions);

    if (!result || result.affectedRows === 0) {
      return res
        .status(404)
        .send("Usu√°rio n√£o encontrado ou sem altera√ß√µes a serem feitas.");
    }

    console.log(`Permiss√µes do usu√°rio ${id_user} atualizadas com sucesso`);
    return res
      .status(200)
      .json({ mensagem: "Permiss√µes atualizadas com sucesso!" });
  } catch (err) {
    console.error("Erro ao atualizar permiss√µes:", err);
    return res.status(500).send("Erro interno ao atualizar permiss√µes.");
  }
};

// üîπ Retorna as permiss√µes de um usu√°rio espec√≠fico
exports.getAccessByUser = async (req, res) => {
  try {
    const { id_user } = req.params;
    const userAccess = await accessModel.getAccessByUser(id_user);

    if (!userAccess) return res.status(404).send("Usu√°rio n√£o encontrado");

    return res.status(200).json(userAccess);
  } catch (err) {
    console.error("Erro ao buscar permiss√µes do usu√°rio:", err);
    return res.status(500).send("Erro interno");
  }
};

